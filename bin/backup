#!/bin/bash

# Disc backup script
# Requires rsync 3

# Must be run as root
#  rsync takes long enough that the sudo permission times out by the time bless command is reached
if [[ $EUID -ne 0 ]]; then
	echo "This script must be run as root"
	exit
fi

# IMPORTANT: Make sure you update the `DST` variable to match the name of the
# destination backup drive

DST=/Volumes/Recovery
SRC="/"
EXCLUDE="$HOME/.dotfiles/bin/.backupignore"

PROG=$0

# --acls                   update the destination ACLs to be the same as the source ACLs
# --archive                turn on archive mode (recursive copy + retain attributes)
# --delete                 delete any files that have been deleted locally
# --delete-excluded        delete any files (on DST) that are part of the list of excluded files
# --exclude-from           reference a list of files to exclude
# --hard-links             preserve hard-links
# --one-file-system        don't cross device boundaries (ignore mounted volumes)
# --sparse                 handle spare files efficiently
# --verbose                increase verbosity
# --xattrs                 update the remote extended attributes to be the same as the local ones

if test -z "$DST"; then
	logger -t $PROG "DST volume needs to be set - Cannot start the sync process"
	exit
fi

if [ ! -r "$SRC" ]; then
    logger -t $PROG "Source $SRC not readable - Cannot start the sync process"
    exit;
fi

if [ ! -w "$DST" ]; then
    logger -t $PROG "Destination $DST not writeable - Cannot start the sync process"
    exit;
fi

# Ask for the administrator password upfront
logger -t $PROG "Start rsync"

rsync --acls \
           --archive \
           --delete \
           --exclude-from=$EXCLUDE \
           --hard-links \
           --one-file-system \
           --sparse \
           --xattrs \
           "$SRC" "$DST"

logger -t $PROG "End rsync"

# Make the backup bootable
bless -folder "$DST"/System/Library/CoreServices

# Update the backup's cache
# sudo update_dyld_shared_cache -force -root "$DST"

exit 0
