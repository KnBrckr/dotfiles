#!/bin/bash

# Header logging
e_header() {
    printf "\n${c_bold}%s${c_reset}\n" "$@"
}

# Success logging
e_success() {
    printf "${c_green}${c_bold}âœ“ %s${c_reset}\n" "$@"
}

# Error logging
e_error() {
    printf "${c_red}${c_bold}X %s${c_reset}\n" "$@"
}

# Warning logging
e_warning() {
    printf "${c_yellow}${c_bold}! %s${c_reset}\n" "$@"
}

# Ask for confirmation before proceeding
seek_confirmation() {
    printf "\n"
    e_warning "$@"
    read -p "Continue? (y/n) " -n 1
    printf "\n"
}

# Test whether the result of an 'ask' is a confirmation
is_confirmed() {
    if [[ "$REPLY" =~ ^[Yy]$ ]]; then
      return 0
    fi
    return 1
}

# Test whether we're in a git repo
is_git_repo() {
    $(git rev-parse --is-inside-work-tree &> /dev/null)
}

# Test whether a command exists
# $1 - cmd to test
type_exists() {
    if [ $(type -P $1) ]; then
      return 0
    fi
    return 1
}

# Test whether a Homebrew formula is already installed
# $1 - formula name (may include options)
formula_exists() {
    if $(brew list $1 >/dev/null); then
        printf "%s already installed.\n" "$1"
        return 0
    fi

    e_warning "Missing formula: $1"
    return 1
}

# Test whether a MacPorts port is already installed
# $1 - port name
port_exists() {
	if [[ `port installed $1` =~ None\ of\ the\ specified\ ports\ are\ installed ]]; then
		return 1
	fi
	return 0
}

# Test if running on a mac
is_mac() {
	if [[ `uname -s` == "Darwin" ]]; then
		return 0
	fi
	return 1
}
