#!/bin/bash
#
# For SABnzbd: py-cheetah, py-openssl  (also need http://sabnzbd.sourceforge.net/yenc-0.3.tar.gz)
#
# Setup of apache, php, mysql based on: https://trac.macports.org/wiki/howto/MAMP
#  apache2
#  mysql55-server
#  php56 +apache2
#  php56-mysql
#  php56-apache2handler
#  phpmyadmin
#  
#
# Additional Requested MacPorts:
#  autoconf @2.69_2 (active)
#  automake @1.14.1_1 (active)
#  exif @0.6.21_0 (active)
#  glib2 @2.38.2_0 (active)
#  help2man @1.43.3_1 (active)
#  libedit @20121213-3.0_0 (active)
#  libtool @2.4.2_3 (active)
#  m4 @1.4.16_0 (active)
#  mysql5-server @5.1.72_0 (active)
#  p5.12-locale-gettext @1.50.0_7 (active)
#  perl5 @5.12.4_0+perl5_12 (active)
#  php54-calendar @5.4.26_0 (active)
#  php54-curl @5.4.26_0 (active)
#  php54-exif @5.4.26_0 (active)
#  php54-odbc @5.4.26_0+unixodbc (active)
#  php54-openssl @5.4.26_0 (active)
#  php54-posix @5.4.26_0 (active)
#  php54-sqlite @5.4.26_0 (active)
#  php54-wddx @5.4.26_0 (active)
#  php54-xmlrpc @5.4.26_0 (active)
#  php54-xsl @5.4.26_0 (active)
#  py27-feedparser @5.1.3_0 (active)
#  qt4-mac @4.8.5_1 (active)

run_macports() {

    # Check for Homebrew
    if type_exists 'port'; then
        e_header "Updating MacPorts..."
        # Use the latest version of MacPorts
        sudo port selfupdate
        [[ $? ]] && e_success "Done"

        e_header "Updating any existing MacPorts..."
        # Upgrade any already-installed ports
		sudo port upgrade outdated
        [[ $? ]] && e_success "Done"
		
		# TODO If python is upgraded, need to resign the binary
		# codesign -f -s - /opt/local/Library/Frameworks/Python.framework/Versions/2.7/Resources/Python.app

        e_header "Checking status of desired Macports..."
        local list_ports
        local -a missing_ports
        local -a desired_ports=(
			coreutils
			mercurial
			multimarkdown
			p5-image-exiftool
			p5-json
			proctools
			pstree
			py-cheetah
			py-openssl
			rsync
			terminal-notifier
			unzip
			wget
        )

        for index in ${!desired_ports[*]}
        do
            if ! port_exists ${desired_ports[$index]}; then
                # Store the name (and options) of every missing port
                missing_ports=("${missing_ports[@]}" "${desired_ports[$index]}")
            fi
        done

        if [[ "$missing_ports" ]]; then
            # Convert the array of missing ports into a list of space-separate strings
            list_ports=$( printf "%s " "${missing_ports[@]}" )

            e_header "Installing missing MacPorts..."
            # Install all missing ports
			sudo port install $list_ports

            [[ $? ]] && e_success "Done"
        fi

        # Remove outdated versions
		e_header "Cleaning up inactive versions..."
		sudo port uninstall inactive
        [[ $? ]] && e_success "Done"
		
    else
        printf "\n"
        e_error "Error: MacPorts not found."
        printf "Aborting...\n"
        exit
    fi

}
