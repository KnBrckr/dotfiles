# zshrc
#
# Zsh configuration files in order of execution:
#   all users      user       login shell  interactive shell  scripts  Terminal.app
#   /etc/zshenv    .zshenv    √            √                  √        √
#   /etc/zprofile  .zprofile  √            x                  x        √
#   /etc/zshrc     .zshrc     √            √                  x        √
#   /etc/zlogin    .zlogin    √            x                  x        √
#   /etc/zlogout   .zlogout   √            x                  x        √

# For profiling, uncomment load of zprof and zprof call at end of script.
# zmodload zsh/zprof
#
# Test zsh login timing with:
# for i in $(seq 1 10); do time zsh -i -c exit; done

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

load_dotfiles() {
	declare -a files=(
		$DOTFILES/shell/dbus_setup    # Setup DBUS services in WSL environments
		$DOTFILES/shell/functions/*   # Functions
		$DOTFILES/shell/shell_exports # Exports
		$DOTFILES/shell/shell_aliases # Aliases
		$DOTFILES/shell/shell_paths   # Path modifications
		$HOME/.shell_profile.local    # Local and private settings not under version control
	)

	# if these files are readable, source them
	for file in "${files[@]}"
	do
		if [ -r "${file}" ]; then
			source "${file}"
		fi
	done
}

# Setup python environment before loading dot files
if command -v pyenv 1>/dev/null 2>&1; then
  eval "$(pyenv init -)"
fi

load_dotfiles
unset load_dotfiles

# By default, want group able to see files, not write
umask 0022

# add private identities to the ssh key-agent for port forwarding of ssh credentials
ssh-add >> /dev/null 2>&1
[ -f $HOME/.ssh/aws-codecommit ] && ssh-add $HOME/.ssh/aws-codecommit >> /dev/null 2>&1
[ -f $HOME/.ssh/vagrant ] && ssh-add $HOME/.ssh/vagrant >> /dev/null 2>&1

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Relocate completion cache
export ZSH_COMPDUMP=$ZSH/cache/.zcompdump-$HOST

# Disable automatic omz update checks due to interference with powerlevel10k prompt
zstyle ':omz:update' mode disabled

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="powerlevel10k/powerlevel10k"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in ~/.oh-my-zsh/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS=true

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Which plugins would you like to load?
# Standard plugins can be found in ~/.oh-my-zsh/plugins/*
# Custom plugins may be added to $DOTFILES/shell/zshcustom
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
				 alias-tips
				 git 
				 zsh-syntax-highlighting
				 zsh-autosuggestions
				 z # https://github.com/agkozak/zsh-z 'cd` helper
			  )

if command_exists docker; then
	plugins+=( docker )
fi

if command_exists podman; then
	plugins+=( podman )
fi

if command_exists brew; then
	plugins+=( brew )
fi

# Add OSX related plugins
if is_mac; then
	plugins+=( macos )
fi

if is_ubuntu; then
	plugins+=(
  	ubuntu 
  )
fi

if is_redhat; then
	plugins+=(
	  systemd
	)
fi

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# Override oh-my-zsh color settings
[ -r $DOTFILES/shell/zsh_colors  ] && source $DOTFILES/shell/zsh_colors 

# Setup git based on locally defined environment
if command_exists 'git'; then
	# Setup proxy if defined
	[ "$http_proxy" ] && git config --global http.proxy $http_proxy
fi

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# fzf shell integration
if command_exists 'fzf'; then
	source <(fzf --zsh)
	[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
fi

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[ -f ~/.p10k.zsh ] && source ~/.p10k.zsh

# zprof

# vim: filetype=zsh
